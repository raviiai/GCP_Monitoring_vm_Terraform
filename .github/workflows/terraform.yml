
name: 'Terraform CI CD'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash


    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_email: ${{ vars.EMAIL }}
        TF_VAR_instance_name: ${{ vars.INSTANCE_NAME }}
        TF_VAR_project_id: ${{ secrets.PROJECT_ID }}


    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ./
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_email: ${{ vars.EMAIL }}
        TF_VAR_instance_name: ${{ vars.INSTANCE_NAME }}
        TF_VAR_project_id: ${{ secrets.PROJECT_ID }}

    - name: Send approval request
      uses: peter-evans/create-issue-from-file@v2
      with:
          title: 'Deployment Approval Request'
          assignees: 'raviiai'
          labels: 'approval'
          body: |
            Please approve this deployment by commenting :+1: on this issue.
    - name: Wait for approval
      uses: andstor/wait-for-approval@v1
      with:
          issue-number: ${{ steps.send_approval_request.outputs.number }}
          repository-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Terraform Apply
      run: terraform apply -input=false -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_email: ${{ vars.EMAIL }}
        TF_VAR_instance_name: ${{ vars.INSTANCE_NAME }}
        TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'

      ## comment added